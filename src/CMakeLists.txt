FILE( GLOB_RECURSE SRC_FILES ${CMAKE_CURRENT_SOURCE_DIR}/*.cxx )

ADD_LIBRARY( ${PROJECT_NAME} STATIC ${SRC_FILES} )

# Set libraries compiled in debug mode to end in 'd'
SET_TARGET_PROPERTIES( ${PROJECT_NAME} PROPERTIES DEBUG_POSTFIX "d" )

# Set the public header
SET_TARGET_PROPERTIES( ${PROJECT_NAME} PROPERTIES PUBLIC_HEADER "${SCRCAPI_CODE_COVERAGE}" )

TARGET_INCLUDE_DIRECTORIES( ${PROJECT_NAME} PRIVATE ${SCRCAPI_INCLUDE_DIRS} )
TARGET_INCLUDE_DIRECTORIES( ${PROJECT_NAME} PUBLIC ${JsonCpp_INCLUDE_DIRS} )
TARGET_INCLUDE_DIRECTORIES( ${PROJECT_NAME} PUBLIC ${YAMLCPP_INCLUDE_DIR} )
TARGET_INCLUDE_DIRECTORIES( ${PROJECT_NAME} PUBLIC ${CURL_INCLUDE_DIRS} )
TARGET_INCLUDE_DIRECTORIES( ${PROJECT_NAME} PUBLIC ${DIGESTPP_INCLUDE_DIRS} )
TARGET_INCLUDE_DIRECTORIES( ${PROJECT_NAME} PUBLIC ${SPDLOG_INCLUDE_DIRS} )
TARGET_INCLUDE_DIRECTORIES( ${PROJECT_NAME} PUBLIC ${TOML11_INCLUDE_DIRS} )
TARGET_INCLUDE_DIRECTORIES( ${PROJECT_NAME} PUBLIC ${HDF5_INCLUDE_DIRS} )


TARGET_LINK_LIBRARIES( ${PROJECT_NAME} PUBLIC ${JsonCpp_LIBRARIES} )
TARGET_LINK_LIBRARIES( ${PROJECT_NAME} PUBLIC ${DIGESTPP} )
TARGET_LINK_LIBRARIES( ${PROJECT_NAME} PUBLIC ${YAMLCPP_LIBRARY} )
TARGET_LINK_LIBRARIES( ${PROJECT_NAME} PUBLIC ${CURL_LIBRARIES} )
TARGET_LINK_LIBRARIES( ${PROJECT_NAME} PUBLIC ${SPDLOG} )
TARGET_LINK_LIBRARIES( ${PROJECT_NAME} PUBLIC ${HDF5_CXX_LIBRARIES} )
TARGET_LINK_LIBRARIES( ${PROJECT_NAME} PUBLIC ${HDF5_CXX_HL_LIBRARIES} )
TARGET_LINK_LIBRARIES( ${PROJECT_NAME} PUBLIC ${HDF5_C_LIBRARIES} )

INSTALL( TARGETS ${PROJECT_NAME} 
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
    PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
)