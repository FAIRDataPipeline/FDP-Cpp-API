name: FDP C++ API

on: [push]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y lcov libjsoncpp-dev curl libcurl4-openssl-dev libyaml-cpp-dev libhdf5-dev
      - name: Configure Library
        run: |
          cmake . -Bbuild -DFDPAPI_BUILD_TESTS=ON
      - name: Fetch cache
        uses: actions/cache@v2.1.5
        with:
          path: sonarCache
          key: ${{ runner.os }}-sonarCache-${{ github.sha }}
          restore-keys: ${{ runner.os }}-sonarCache-
      - name: Prepare Sonar scanner
        run: |
          wget -nv https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.0.2311-linux.zip
          unzip -q sonar-scanner-cli-4.6.0.2311-linux.zip
          echo "${PWD}/sonar-scanner-4.6.0.2311-linux/bin/" >> $GITHUB_PATH
          wget -nv https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
          unzip -q build-wrapper-linux-x86.zip          
          echo "${PWD}/build-wrapper-linux-x86" >> $GITHUB_PATH
      - name: Compile FDP-Cpp-API
        run: build-wrapper-linux-x86-64 --out-dir bw-outputs cmake --build build
        env:
          CIBuild: 1
          BUILD_TESTS: True
      - name: Run Unit Tests
        run: |
          bash test/test_setup.sh
          cmake --build build --target test
          if [ $? -eq 0 ]; then
            echo "Unit tests completed successfully"
            exit 0
          else
            echo "Unit tests failed"
            exit 1
          fi
      - name: SonarCloud Scan
        run: |
          sonar-scanner -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN -X
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
